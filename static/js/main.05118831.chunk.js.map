{"version":3,"sources":["redux/actions/index.js","pages/Login/Login.jsx","componentes/TableSpend.jsx","componentes/FormDespesa.jsx","pages/Wallet.jsx","App.js","redux/reducers/user.js","redux/reducers/wallet.js","redux/reducers/index.js","redux/store/index.js","index.js"],"names":["fetchCurrencies","dispatch","fetch","then","response","json","currencies","data","Newcurrencies","BRL","type","Object","keys","Login","handleForm","target","name","value","setState","IsEmail","email","test","verifyLogin","check","state","isDisabled","clickEnter","e","preventDefault","props","history","setUser","push","this","className","placeholder","onChange","onKeyUp","disabled","onClick","React","Component","connect","user","login","payload","actionLogin","getCurrency","TableSpend","expenses","deleteExpense","editExpanse","map","index","description","id","currency","tag","method","exchangeRates","key","Number","toFixed","split","ask","wallet","FormDespesa","isEditingMode","expenseSelect","expenseSelectPosition","fecthPrices","currenciesApi","result","addBRL","idExpense","delExpense","saveExpanse","prevState","setEditExpense","editExpense","expense","position","getSumExpenses","length","reduce","acc","cur","htmlFor","filter","currenci","expanse","newExpense","actionEditExpense","Wallet","App","path","render","INITIAL_STATE","action","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.05118831.chunk.js","sourcesContent":["export const LOGIN = 'LOGIN';\nexport const GET_CURRENCIES = 'GET_CURRENCIES';\nexport const ADD_EXPENSE = 'ADD_EXPENSE';\nexport const DELETE_EXPENSE = 'DELETE_EXPENSE';\nexport const EDIT_EXPENSE = 'EDIT_EXPENSE';\n\nexport const actionLogin = (login) => ({ type: LOGIN, payload: login });\n\nexport const getCurrencies = (data) => ({\n  type: GET_CURRENCIES,\n  data: Object.keys(data),\n});\n\nexport const actionAddExpense = (expense) => ({\n  type: ADD_EXPENSE,\n  payload: expense,\n});\n\nexport const actionDeleteExpense = (expense) => ({\n  type: DELETE_EXPENSE,\n  payload: expense,\n});\n\nexport const actionEditExpense = (newExpense, position, expenses) => {\n  expenses[position] = newExpense;\n  return ({\n    type: EDIT_EXPENSE,\n    payload: expenses,\n  });\n};\n\nexport function fetchCurrencies() {\n  return (dispatch) => fetch('https://economia.awesomeapi.com.br/json/all')\n    .then((response) => response.json())\n    .then((currencies) => {\n      const Newcurrencies = {...currencies, BRL: {\n        \"code\": \"BRL\",\n        \"codein\": \"BRL\",\n        \"name\": \"Real Brasileiro\",\n        \"ask\": \"1\",\n      }, };\n      dispatch(getCurrencies(Newcurrencies));});\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { actionLogin, fetchCurrencies } from '../../redux/actions';\nimport './login.css';\n\nclass Login extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      email: '',\n      isDisabled: true,\n    };\n  }\n\n  handleForm = ({ target }) => {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  };\n\n  IsEmail = (email) => {\n  // https://www.horadecodar.com.br/2020/09/13/como-validar-email-com-javascript/\n    const re = /\\S+@\\S+\\.\\S+/;\n    return !re.test(email);\n  };\n\n  verifyLogin = () => {\n    let check = true;\n    const { email } = this.state;\n    const checkEmail = this.IsEmail(email);\n    if (checkEmail === false) {\n      check = false;\n    }\n    this.setState({ isDisabled: check });\n  };\n\n  clickEnter = (e) => {\n    e.preventDefault();\n    const { history, setUser } = this.props;\n    const { email } = this.state;\n    setUser({ email });\n    history.push('/carteira');\n  }\n\n  render() {\n    const { email, isDisabled } = this.state;\n    return (\n      <div className=\"login-container\">\n        <h1>LOGIN</h1>\n        <form>\n          <input\n            type=\"email\"\n            name=\"email\"\n            value={ email }\n            placeholder=\"Email\"\n            onChange={ (e) => this.handleForm(e) }\n            onKeyUp={ () => this.verifyLogin() }\n          />\n          <button\n            type=\"submit\"\n            disabled={ isDisabled }\n            onClick={ (e) => this.clickEnter(e) }\n          >\n            Entrar\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  setUser: (user) => dispatch(actionLogin(user)),\n  getCurrency: () => dispatch(fetchCurrencies()),\n});\n\nLogin.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n  setUser: PropTypes.func.isRequired,\n};\n\nexport default connect(null, mapDispatchToProps)(Login);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport './TableSpend.css';\n\nclass TableSpend extends React.Component {\n  render() {\n    const { expenses, deleteExpense, editExpanse } = this.props;\n    return (\n      <table className=\"table-expense-container\">\n        <tr className=\"table-tr table-trHeader\">\n          <th>Descrição</th>\n          <th>Tag</th>\n          <th>Método de pagamento</th>\n          <th>Valor</th>\n          <th>Moeda</th>\n          <th>Câmbio utilizado</th>\n          <th>Valor convertido</th>\n          <th>Moeda de conversão</th>\n          <th>Editar/Excluir</th>\n        </tr>\n        { expenses && expenses.map(({\n          description,\n          id,\n          value,\n          currency,\n          tag,\n          method,\n          exchangeRates,\n        }, index) => (\n          <tr key={ id } className=\"table-tr table-body\">\n            <td>{description}</td>\n            <td>{tag}</td>\n            <td>{method}</td>\n            <td>{Number(value).toFixed(2)}</td>\n            <td>\n              {exchangeRates[currency].name.split('/')[0]}\n            </td>\n            <td>{Number(exchangeRates[currency].ask).toFixed(2)}</td>\n            <td>\n              { Number(value * exchangeRates[currency].ask).toFixed(2)}\n            </td>\n            <td>Real</td>\n            <td>\n              <button\n                type=\"button\"\n                className=\"btn-edit\"\n                onClick={ () => editExpanse(expenses[index], index) }\n              >\n                Editar\n              </button>\n              <button\n                type=\"button\"\n                className=\"btn-delete\"\n                onClick={ () => deleteExpense(id) }\n              >\n                Excluir\n              </button>\n            </td>\n          </tr>\n        ))}\n      </table>\n    );\n  }\n}\n\nTableSpend.propTypes = {\n  expenses: PropTypes.arrayOf(PropTypes.object).isRequired,\n  deleteExpense: PropTypes.func.isRequired,\n  editExpanse: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  expenses: state.wallet.expenses,\n});\n\nexport default connect(mapStateToProps)(TableSpend);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { BiWalletAlt, BiUserCircle } from 'react-icons/bi';\nimport { actionAddExpense, actionDeleteExpense, actionEditExpense } from '../redux/actions';\nimport TableSpend from './TableSpend';\nimport './FormDespesa.css';\n\nclass FormDespesa extends React.Component {\n  state = {\n    value: '',\n    description: '',\n    currency: 'BRL',\n    method: 'Dinheiro',\n    tag: 'Alimentação',\n    id: 0,\n    isEditingMode: false,\n    expenseSelect: '',\n    expenseSelectPosition: 0,\n  }\n\n  handleForm = ({ target }) => {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  };\n\n  fecthPrices = async () => {\n    const currenciesApi = await fetch('https://economia.awesomeapi.com.br/json/all');\n    const result = await currenciesApi.json();\n    const addBRL = { ...result, BRL: {\n      \"code\": \"BRL\",\n      \"codein\": \"BRL\",\n      \"name\": \"Real Brasileiro\",\n      \"ask\": \"1\",\n    }};\n    return addBRL;\n  };\n\n  deleteExpense = (idExpense) => {\n    const { delExpense } = this.props;\n    delExpense(idExpense);\n    this.setState(({ id }) => this.setState({ id: id - 1 }));\n  };\n\n  saveExpanse = async () => {\n    const { value, description, currency, method, tag, id } = this.state;\n    const { saveExpanse } = this.props;\n    const currencies = await this.fecthPrices();\n    saveExpanse({\n      value,\n      description,\n      currency,\n      method,\n      tag,\n      id,\n      exchangeRates: currencies });\n    this.setState((prevState) => this.setState({\n      id: prevState.id + 1,\n      value: '',\n      description: '',\n      currency: 'BRL',\n      method: 'Dinheiro' }));\n  };\n\n  setEditExpense = () => {\n    const { editExpense, expenses } = this.props;\n    const { expenseSelect, expenseSelectPosition, value, description, currency, method,\n      tag } = this.state;\n    const expanseEdited = { ...expenseSelect, value, description, currency, method, tag };\n    editExpense(expanseEdited, expenseSelectPosition, expenses);\n    this.setState({\n      value: 0,\n      description: '',\n      currency: 'BRL',\n      method: 'Dinheiro',\n      expenseSelect: '',\n      expenseSelectPosition: 0,\n      isEditingMode: false,\n    });\n  };\n\n  editExpense = (expense, position) => {\n    const { value, description, currency, method, tag } = expense;\n    this.setState({\n      isEditingMode: true,\n      expenseSelect: expense,\n      expenseSelectPosition: position,\n      value,\n      description,\n      currency,\n      method,\n      tag });\n  };\n\n  getSumExpenses = (expenses) => {\n    if (expenses.length === 0) return 0;\n    const sum = expenses\n      .map(({ value, currency, exchangeRates }) => (\n        Number(value) * Number(exchangeRates[currency].ask)))\n      .reduce((acc, cur) => acc + cur);\n    return sum.toFixed(2);\n  };\n\n  render() {\n    const { currencies, email, expenses } = this.props;\n    const { value, description, currency, method, tag, isEditingMode } = this.state;\n    return (\n      <div>\n        <header className=\"header\">\n          <div className=\"wallet-svg\">\n            <span>Wallet</span>\n            <BiWalletAlt />\n          </div>\n          <div className=\"user\">\n            <div className=\"user-info\">\n              <BiUserCircle className=\"user-svg\" />\n              <span>\n                { email }\n              </span>\n            </div>\n            <div className=\"user-cash\">\n              Despesa Total: R$\n              <span>{this.getSumExpenses(expenses)}</span>\n              <span>BRL</span>\n            </div>\n          </div>\n        </header>\n        <form className=\"form-container\">\n          <label htmlFor=\"despesa-valor\">\n            Valor:\n            <input\n              type=\"number\"\n              name=\"value\"\n              id=\"despesa-valor\"\n              onChange={ (e) => this.handleForm(e) }\n              value={ value }\n            />\n          </label>\n          <label htmlFor=\"descricao\">\n            Descrição:\n            <input\n              type=\"text\"\n              placeholder=\"Uma breve descrição da despesa\"\n              name=\"description\"\n              id=\"descricao\"\n              onChange={ (e) => this.handleForm(e) }\n              value={ description }\n            />\n          </label>\n          <label htmlFor=\"moeda\">\n            Moeda:\n            <select\n              id=\"moeda\"\n              name=\"currency\"\n              onChange={ (e) => this.handleForm(e) }\n              value={ currency }\n            >\n              { currencies.filter((currenci) => currenci !== 'USDT')\n                .map((currenci, index) => (\n                  <option\n                    key={ index }\n                    value={ currenci }\n                  >\n                    {currenci}\n                  </option>\n                ))}\n            </select>\n          </label>\n          <label htmlFor=\"tag\">\n            Tag:\n            <select\n              id=\"tag\"\n              name=\"tag\"\n              onChange={ (e) => this.handleForm(e) }\n              value={ tag }\n            >\n              <option value=\"Alimentação\">Alimentação</option>\n              <option value=\"Lazer\">Lazer</option>\n              <option value=\"Trabalho\">Trabalho</option>\n              <option value=\"Transporte\">Transporte</option>\n              <option value=\"Saúde\">Saúde</option>\n            </select>\n          </label>\n          <label htmlFor=\"metodo-pagamento\">\n            Método de Pagamento:\n            <select\n              id=\"metodo-pagamento\"\n              name=\"method\"\n              onChange={ (e) => this.handleForm(e) }\n              value={ method }\n            >\n              <option value=\"Dinheiro\">Dinheiro</option>\n              <option value=\"Cartão de crédito\">Cartão de crédito</option>\n              <option value=\"Cartão de débito\">Cartão de débito</option>\n            </select>\n          </label>\n          <div>\n            { isEditingMode ? (\n              <button type=\"button\" onClick={ () => this.setEditExpense() }>\n                Editar despesa\n              </button>\n            ) : (\n              <button type=\"button\" onClick={ () => this.saveExpanse() }>\n                Adicionar despesa\n              </button>\n            )}\n          </div>\n        </form>\n        <div>\n          <TableSpend\n            deleteExpense={ this.deleteExpense }\n            isEditingMode={ isEditingMode }\n            editExpanse={ this.editExpense }\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nFormDespesa.propTypes = {\n  currencies: PropTypes.arrayOf(PropTypes.string).isRequired,\n  expenses: PropTypes.arrayOf(PropTypes.object).isRequired,\n  saveExpanse: PropTypes.func.isRequired,\n  delExpense: PropTypes.func.isRequired,\n  editExpense: PropTypes.func.isRequired,\n  email: PropTypes.string.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  currencies: state.wallet.currencies,\n  expenses: state.wallet.expenses,\n  email: state.user.email });\n\nconst mapDispatchToProps = (dispatch) => ({\n  saveExpanse: (expanse) => dispatch(actionAddExpense(expanse)),\n  delExpense: (id) => dispatch(actionDeleteExpense(id)),\n  editExpense: (newExpense, position, expenses) => dispatch(\n    actionEditExpense(newExpense, position, expenses),\n  ) });\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDespesa);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { fetchCurrencies } from '../redux/actions';\nimport FormDespesa from '../componentes/FormDespesa';\n\nclass Wallet extends React.Component {\n  async componentDidMount() {\n    const { getCurrency } = this.props;\n    getCurrency();\n  }\n\n  render() {\n    return (\n      <FormDespesa />\n    );\n  }\n}\n\nWallet.propTypes = {\n  getCurrency: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  getCurrency: () => dispatch(fetchCurrencies()),\n});\n\nexport default connect(null, mapDispatchToProps)(Wallet);\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Login from './pages/Login/Login.jsx';\nimport Wallet from './pages/Wallet.jsx';\n\nfunction App() {\n  return (\n    <div>\n      <Switch>\n        <Route path=\"/carteira\" render={ (props) => <Wallet { ...props } /> } />\n        <Route path=\"/\" render={ (props) => <Login { ...props } /> } />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import { LOGIN } from '../actions/index';\n\nconst INITIAL_STATE = {\n  email: '',\n};\n\nfunction user(state = INITIAL_STATE, action) {\n  switch (action.type) {\n  case LOGIN:\n    return {\n      ...state,\n      ...action.payload,\n    };\n  default:\n    return state;\n  }\n}\n\nexport default user;\n","import { GET_CURRENCIES, ADD_EXPENSE, DELETE_EXPENSE, EDIT_EXPENSE } from '../actions/index';\n\nconst INITIAL_STATE = {\n  currencies: [],\n  expenses: [],\n};\n\nfunction wallet(state = INITIAL_STATE, action) {\n  switch (action.type) {\n  case GET_CURRENCIES:\n    return {\n      ...state,\n      currencies: action.data,\n    };\n  case ADD_EXPENSE:\n    return {\n      ...state,\n      expenses: [...state.expenses, action.payload],\n    };\n  case DELETE_EXPENSE:\n    return {\n      ...state,\n      expenses: state.expenses.filter((expense) => expense.id !== action.payload),\n    };\n  case EDIT_EXPENSE:\n    return {\n      ...state,\n      expenses: action.payload,\n    };\n  default:\n    return state;\n  }\n}\n\nexport default wallet;\n","import { combineReducers } from 'redux';\nimport user from './user';\nimport wallet from './wallet';\n\nconst rootReducer = combineReducers({ user, wallet });\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer from '../reducers';\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={ store }>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}